// Mocks generated by Mockito 5.4.4 from annotations
// in mindlee_demo/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:flutter/material.dart' as _i3;
import 'package:flutter/services.dart' as _i8;
import 'package:logging/logging.dart' as _i2;
import 'package:mindlee_demo/src/app/pages/home/home_controller.dart' as _i4;
import 'package:mindlee_demo/src/domain/entities/message.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogger_0 extends _i1.SmartFake implements _i2.Logger {
  _FakeLogger_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeState_1<T extends _i3.StatefulWidget> extends _i1.SmartFake
    implements _i3.State<T> {
  _FakeState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeGlobalKey_2<T extends _i3.State<_i3.StatefulWidget>>
    extends _i1.SmartFake implements _i3.GlobalKey<T> {
  _FakeGlobalKey_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBuildContext_3 extends _i1.SmartFake implements _i3.BuildContext {
  _FakeBuildContext_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeController extends _i1.Mock implements _i4.HomeController {
  MockHomeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i5.Message> get messages => (super.noSuchMethod(
        Invocation.getter(#messages),
        returnValue: <_i5.Message>[],
      ) as List<_i5.Message>);

  @override
  set messages(List<_i5.Message>? _messages) => super.noSuchMethod(
        Invocation.setter(
          #messages,
          _messages,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          _isLoading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Logger get logger => (super.noSuchMethod(
        Invocation.getter(#logger),
        returnValue: _FakeLogger_0(
          this,
          Invocation.getter(#logger),
        ),
      ) as _i2.Logger);

  @override
  set logger(_i2.Logger? _logger) => super.noSuchMethod(
        Invocation.setter(
          #logger,
          _logger,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void onInitState() => super.noSuchMethod(
        Invocation.method(
          #onInitState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initListeners() => super.noSuchMethod(
        Invocation.method(
          #initListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> loadMessages() => (super.noSuchMethod(
        Invocation.method(
          #loadMessages,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> likeMessage(
    String? id,
    bool? liked,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #likeMessage,
          [
            id,
            liked,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void didChangeAppLifecycleState(_i7.AppLifecycleState? state) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeAppLifecycleState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshUI() => super.noSuchMethod(
        Invocation.method(
          #refreshUI,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDisposed() => super.noSuchMethod(
        Invocation.method(
          #onDisposed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.State<_i3.StatefulWidget> getState() => (super.noSuchMethod(
        Invocation.method(
          #getState,
          [],
        ),
        returnValue: _FakeState_1<_i3.StatefulWidget>(
          this,
          Invocation.method(
            #getState,
            [],
          ),
        ),
      ) as _i3.State<_i3.StatefulWidget>);

  @override
  _i3.GlobalKey<_i3.State<_i3.StatefulWidget>> getStateKey() =>
      (super.noSuchMethod(
        Invocation.method(
          #getStateKey,
          [],
        ),
        returnValue: _FakeGlobalKey_2<_i3.State<_i3.StatefulWidget>>(
          this,
          Invocation.method(
            #getStateKey,
            [],
          ),
        ),
      ) as _i3.GlobalKey<_i3.State<_i3.StatefulWidget>>);

  @override
  void initController(_i3.GlobalKey<_i3.State<_i3.StatefulWidget>>? key) =>
      super.noSuchMethod(
        Invocation.method(
          #initController,
          [key],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.BuildContext getContext() => (super.noSuchMethod(
        Invocation.method(
          #getContext,
          [],
        ),
        returnValue: _FakeBuildContext_3(
          this,
          Invocation.method(
            #getContext,
            [],
          ),
        ),
      ) as _i3.BuildContext);

  @override
  void onInActive() => super.noSuchMethod(
        Invocation.method(
          #onInActive,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onPaused() => super.noSuchMethod(
        Invocation.method(
          #onPaused,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onResumed() => super.noSuchMethod(
        Invocation.method(
          #onResumed,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDetached() => super.noSuchMethod(
        Invocation.method(
          #onDetached,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDeactivated() => super.noSuchMethod(
        Invocation.method(
          #onDeactivated,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReassembled() => super.noSuchMethod(
        Invocation.method(
          #onReassembled,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDidChangeDependencies() => super.noSuchMethod(
        Invocation.method(
          #onDidChangeDependencies,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool> didPopRoute() => (super.noSuchMethod(
        Invocation.method(
          #didPopRoute,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  bool handleStartBackGesture(_i8.PredictiveBackEvent? backEvent) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleStartBackGesture,
          [backEvent],
        ),
        returnValue: false,
      ) as bool);

  @override
  void handleUpdateBackGestureProgress(_i8.PredictiveBackEvent? backEvent) =>
      super.noSuchMethod(
        Invocation.method(
          #handleUpdateBackGestureProgress,
          [backEvent],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCommitBackGesture() => super.noSuchMethod(
        Invocation.method(
          #handleCommitBackGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleCancelBackGesture() => super.noSuchMethod(
        Invocation.method(
          #handleCancelBackGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool> didPushRoute(String? route) => (super.noSuchMethod(
        Invocation.method(
          #didPushRoute,
          [route],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> didPushRouteInformation(
          _i3.RouteInformation? routeInformation) =>
      (super.noSuchMethod(
        Invocation.method(
          #didPushRouteInformation,
          [routeInformation],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void didChangeMetrics() => super.noSuchMethod(
        Invocation.method(
          #didChangeMetrics,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTextScaleFactor() => super.noSuchMethod(
        Invocation.method(
          #didChangeTextScaleFactor,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangePlatformBrightness() => super.noSuchMethod(
        Invocation.method(
          #didChangePlatformBrightness,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeLocales(List<_i7.Locale>? locales) => super.noSuchMethod(
        Invocation.method(
          #didChangeLocales,
          [locales],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i7.AppExitResponse> didRequestAppExit() => (super.noSuchMethod(
        Invocation.method(
          #didRequestAppExit,
          [],
        ),
        returnValue:
            _i6.Future<_i7.AppExitResponse>.value(_i7.AppExitResponse.exit),
      ) as _i6.Future<_i7.AppExitResponse>);

  @override
  void didHaveMemoryPressure() => super.noSuchMethod(
        Invocation.method(
          #didHaveMemoryPressure,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeAccessibilityFeatures() => super.noSuchMethod(
        Invocation.method(
          #didChangeAccessibilityFeatures,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPopNext() => super.noSuchMethod(
        Invocation.method(
          #didPopNext,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPush() => super.noSuchMethod(
        Invocation.method(
          #didPush,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop() => super.noSuchMethod(
        Invocation.method(
          #didPop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPushNext() => super.noSuchMethod(
        Invocation.method(
          #didPushNext,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
